/*
Mover ganado 
generar codigo del ganado y si están vacunados o no 
controlar vacunación 
agregar ganado a potreros adicionales
Ver animales en cada potrero 
Ventas animales 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finca_ganadera;

import java.awt.BorderLayout;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;


/**
 *
 * @author Usuario
 */
public class Control_ganado extends javax.swing.JFrame {

    /**
     * Creates new form Control_ganado
     */
    static String potrero1[]=new String [80];
    static String potrero2[]=new String [80];
    static String potrero3[]=new String [80];
    static String potrero4[]=new String [80];
    static String potrero5[]=new String [60];
    static String potrero6[]=new String [60];
    static String potrero7[]=new String [60];
    static String potrero8[]=new String [60];
    static String p_ventas[]=new String [40];
    public Control_ganado() {
        initComponents(); 
        llenado_potreros();
        graficas();
        graficas_vacunar();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_mover = new javax.swing.JButton();
        b_vacunar = new javax.swing.JButton();
        b_vender = new javax.swing.JButton();
        b_agregar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        b_mover.setText("Mover");
        b_mover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_moverActionPerformed(evt);
            }
        });

        b_vacunar.setText("Vacunar");
        b_vacunar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_vacunarActionPerformed(evt);
            }
        });

        b_vender.setText("Vender");
        b_vender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_venderActionPerformed(evt);
            }
        });

        b_agregar.setText("Agregar");
        b_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_agregarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(b_mover)
                        .addGap(83, 83, 83)
                        .addComponent(b_vacunar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b_vender)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(b_agregar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_mover)
                    .addComponent(b_vacunar)
                    .addComponent(b_vender)
                    .addComponent(b_agregar))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_agregarActionPerformed
        // TODO add your handling code here
        int potrero=Integer.parseInt(JOptionPane.showInputDialog("¿A qué potrero desea agregar las res?"));
        String raza=JOptionPane.showInputDialog("¿De qué raza es la res?");
        String vacunado=JOptionPane.showInputDialog("¿Está vacunado?");
        int codigo, cont=0;
        
        switch(potrero){
            case 1:                
                if(raza.equalsIgnoreCase("R1") || raza.equalsIgnoreCase("R3")){
                   for (int i = 0; i < potrero1.length; i++) {
                       
                    if(potrero1[i].equals("+")){
                        codigo=(int)(Math.random()*(500-100)+100);
                        potrero1[i]=raza.toUpperCase().charAt(0)+String.valueOf(raza.charAt(1))+"-"+codigo+"/"+vacunado.toUpperCase().charAt(0)+vacunado.charAt(1);
                        cont++;
                    } 
                    if (cont==1)i=potrero1.length;
                    
                    
                }
                }
                else JOptionPane.showMessageDialog(null, "No se puede agregar esta raza a este potrero");
                break;
                
            case 2:
                if(raza.equalsIgnoreCase("R2") || raza.equalsIgnoreCase("R4")){
                   for (int i = 0; i < potrero2.length; i++) {
                    if(potrero2[i].equals("+")){
                        codigo=(int)(Math.random()*(500-100)+100);
                        potrero1[i]=raza.toUpperCase().charAt(0)+String.valueOf(raza.charAt(1))+"-"+codigo+"/"+vacunado.toUpperCase().charAt(0)+vacunado.charAt(1);
                        cont++;
                    } 
                    if (cont==1)i=potrero1.length;
                } 
                }
                else JOptionPane.showMessageDialog(null, "No se puede agregar esta raza a este potrero");
                break;
                
            case 3: 
                if(raza.equalsIgnoreCase("R1") || raza.equalsIgnoreCase("R5")){
                   for (int i = 0; i < potrero3.length; i++) {
                    if(potrero3[i].equals("+")){
                        codigo=(int)(Math.random()*(500-100)+100);
                        potrero1[i]=raza.toUpperCase().charAt(0)+String.valueOf(raza.charAt(1))+"-"+codigo+"/"+vacunado.toUpperCase().charAt(0)+vacunado.charAt(1);
                        cont++;
                    } 
                    if (cont==1)i=potrero1.length;
                } 
                }
                else JOptionPane.showMessageDialog(null, "No se puede agregar esta raza a este potrero");
                break; 
                
            case 4:
                if(raza.equalsIgnoreCase("R4") || raza.equalsIgnoreCase("R6")){
                   for (int i = 0; i < potrero4.length; i++) {
                    if(potrero4[i].equals("+")){
                        codigo=(int)(Math.random()*(500-100)+100);
                        potrero1[i]=raza.toUpperCase().charAt(0)+String.valueOf(raza.charAt(1))+"-"+codigo+"/"+vacunado.toUpperCase().charAt(0)+vacunado.charAt(1);
                        cont++;
                    } 
                    if (cont==1)i=potrero1.length;
                } 
                }
                else JOptionPane.showMessageDialog(null, "No se puede agregar esta raza a este potrero");
                break;
                
            default: 
                JOptionPane.showMessageDialog(null, "Las reses solo se pueden agregar a los cuatro primeros potreros");
                
        }
        
        
    }//GEN-LAST:event_b_agregarActionPerformed

    private void b_venderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_venderActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_b_venderActionPerformed

    private void b_vacunarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_vacunarActionPerformed
        // TODO add your handling code here:

        try {
            graficas_vacunar();
            byte potrero=Byte.parseByte(JOptionPane.showInputDialog("¿En qué potrero desea vacunar las reses?"));
            byte nro_reses_vacunar=Byte.parseByte(JOptionPane.showInputDialog("¿Cuántas reses desea vacunar?"));
            String vacunado[];
            byte cont_vac_jor=0, tot_vacu=0;

            switch(potrero){
                case 1:
                for (int i = 0; i < potrero1.length; i++) {
                    vacunado=potrero1[i].split("/");
                    if(vacunado[1].equals("No")){
                        potrero1[i]=vacunado[0]+"/Si";
                        cont_vac_jor++;
                        tot_vacu++;
                    }
                    
                    if(cont_vac_jor==nro_reses_vacunar || cont_vac_jor>=10 ){
                        i=potrero1.length;     
                }
                    }
                if(nro_reses_vacunar>cont_vac_jor){
                        JOptionPane.showMessageDialog(null, "No se puede vacunar tantas reses");
                    }
                    if(cont_vac_jor==0){
                            JOptionPane.showMessageDialog(null, "No hay más reses por vacunar");
                        }
                    
                    
                break;

                case 2:
                for (int i = 0; i < potrero2.length; i++) {
                    vacunado=potrero2[i].split("/");
                    if(vacunado[1].equals("No")){
                        potrero2[i]=vacunado[0]+"/Si";
                        cont_vac_jor++;
                        tot_vacu++;
                    }

                    if(cont_vac_jor==nro_reses_vacunar || cont_vac_jor>=10 ){
                        i=potrero2.length;
                        
                    }
                }
                 if(nro_reses_vacunar>cont_vac_jor){
                        JOptionPane.showMessageDialog(null, "No se puede vacunar tantas reses");
                    }
                    if(cont_vac_jor==0){
                            JOptionPane.showMessageDialog(null, "No hay más reses por vacunar");
                        }
                break;

                case 3:
                for (int i = 0; i < potrero3.length; i++) {
                    vacunado=potrero3[i].split("/");
                    if(vacunado[1].equals("No")){
                        potrero3[i]=vacunado[0]+"/Si";
                        cont_vac_jor++;
                        tot_vacu++;
                    }

                    if(cont_vac_jor==nro_reses_vacunar || cont_vac_jor>=10 ){
                        i=potrero3.length;
                        
                    }
                }
                 if(nro_reses_vacunar>cont_vac_jor){
                        JOptionPane.showMessageDialog(null, "No se puede vacunar tantas reses");
                    }
                    if(cont_vac_jor==0){
                            JOptionPane.showMessageDialog(null, "No hay más reses por vacunar");
                        }
                break;

                case 4:
                for (int i = 0; i < potrero4.length; i++) {
                    vacunado=potrero4[i].split("/");
                    if(vacunado[1].equals("No")){
                        potrero4[i]=vacunado[0]+"/Si";
                        cont_vac_jor++;
                        tot_vacu++;
                    }

                    if(cont_vac_jor==nro_reses_vacunar || cont_vac_jor>=10 ){
                        i=potrero4.length;
                       
                    }
                }
                 if(nro_reses_vacunar>cont_vac_jor){
                        JOptionPane.showMessageDialog(null, "No se puede vacunar tantas reses");
                    }
                    if(cont_vac_jor==0){
                            JOptionPane.showMessageDialog(null, "No hay más reses por vacunar");
                        }
                break;

                case 5:
                for (int i = 0; i < potrero5.length; i++) {
                    vacunado=potrero5[i].split("/");
                    if(vacunado[1].equals("No")){
                        potrero5[i]=vacunado[0]+"/Si";
                        cont_vac_jor++;
                        tot_vacu++;
                    }

                    if(cont_vac_jor==nro_reses_vacunar || cont_vac_jor>=10 ){
                        i=potrero5.length;
                        
                    }
                }
                 if(nro_reses_vacunar>cont_vac_jor){
                        JOptionPane.showMessageDialog(null, "No se puede vacunar tantas reses");
                    }
                    if(cont_vac_jor==0){
                            JOptionPane.showMessageDialog(null, "No hay más reses por vacunar");
                        }
                break;

                case 6:
                for (int i = 0; i < potrero6.length; i++) {
                    vacunado=potrero6[i].split("/");
                    if(vacunado[1].equals("No")){
                        potrero6[i]=vacunado[0]+"/Si";
                        cont_vac_jor++;
                        tot_vacu++;
                    }

                    if(cont_vac_jor==nro_reses_vacunar || cont_vac_jor>=10 ){
                        i=potrero6.length;
                        
                    }
                }
                 if(nro_reses_vacunar>cont_vac_jor){
                        JOptionPane.showMessageDialog(null, "No se puede vacunar tantas reses");
                    }
                    if(cont_vac_jor==0){
                            JOptionPane.showMessageDialog(null, "No hay más reses por vacunar");
                        }
                break;

                case 7:
                for (int i = 0; i < potrero7.length; i++) {
                    vacunado=potrero7[i].split("/");
                    if(vacunado[1].equals("No")){
                        potrero7[i]=vacunado[0]+"/Si";
                        cont_vac_jor++;
                        tot_vacu++;
                    }

                    if(cont_vac_jor==nro_reses_vacunar || cont_vac_jor>=10 ){
                        i=potrero7.length;
                       
                    } 
                }
                 if(nro_reses_vacunar>cont_vac_jor){
                        JOptionPane.showMessageDialog(null, "No se puede vacunar tantas reses");
                    }
                    if(cont_vac_jor==0){
                            JOptionPane.showMessageDialog(null, "No hay más reses por vacunar");
                        }
                break;

                case 8:
                for (int i = 0; i < potrero8.length; i++) {
                    vacunado=potrero8[i].split("/");
                    if(vacunado[1].equals("No")){
                        potrero8[i]=vacunado[0]+"/Si";
                        cont_vac_jor++;
                        tot_vacu++;
                    }

                    if(cont_vac_jor==nro_reses_vacunar || cont_vac_jor>=10 ){
                        i=potrero8.length;
                        
                    }
                }
                 if(nro_reses_vacunar>cont_vac_jor){
                        JOptionPane.showMessageDialog(null, "No se puede vacunar tantas reses");
                    }
                    if(cont_vac_jor==0){
                            JOptionPane.showMessageDialog(null, "No hay más reses por vacunar");
                        }
                break;

                default:
                JOptionPane.showMessageDialog(null, "El potrero no existe");

            }
            if(tot_vacu>=10)JOptionPane.showMessageDialog(null, "No se puden vacunar más reses en este jornada");

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error \n" + error);
        }
        graficas_vacunar();

    }//GEN-LAST:event_b_vacunarActionPerformed

    private void b_moverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_moverActionPerformed
        // TODO add your handling code here:
        try {
            int potrero=Integer.parseInt(JOptionPane.showInputDialog("De que potrero desea mover las reses"));
            int potrero_s=Integer.parseInt(JOptionPane.showInputDialog("A que potrero desea mover las reses"));
            int nro_reses=Integer.parseInt(JOptionPane.showInputDialog("¿Cuántas reses desea mover?"));
            String raza=JOptionPane.showInputDialog("Ingrese la raza");
            int j=0, cont_r=0;

           if (potrero>0 && potrero<5){
                switch(potrero){
                    case 1:
                    if(potrero_s>4 && potrero_s<9){
                        switch(potrero_s){
                            case 5:
                      
                            for (int i = 0; i < potrero1.length; i++) {
                                if(raza.equalsIgnoreCase("R1")){
                                    if(potrero5[j].equals("+")){
                                       potrero5[j]=potrero1[i];
                                       potrero1[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R3")){
                                    if(potrero5[j].equals("+")){
                                       potrero5[j]=potrero1[i];
                                       potrero1[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero1.length;
                                }
                            }                            
                            break;
                            
                            case 6:
                                 for (int i = 0; i < potrero1.length; i++) {
                                if(raza.equalsIgnoreCase("R1")){
                                    if(potrero6[j].equals("+")){
                                       potrero6[j]=potrero1[i];
                                       potrero1[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R3")){
                                    if(potrero6[j].equals("+")){
                                       potrero6[j]=potrero1[i];
                                       potrero1[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero1.length;
                                }
                            }                            
                            break;
                            
                            case 7:
                                for (int i = 0; i < potrero1.length; i++) {
                                if(raza.equalsIgnoreCase("R1")){
                                    if(potrero7[j].equals("+")){
                                       potrero7[j]=potrero1[i];
                                       potrero1[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R3")){
                                    if(potrero7[j].equals("+")){
                                       potrero7[j]=potrero1[i];
                                       potrero1[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero1.length;
                                }
                            }                            
                            break;
                            case 8:
                                for (int i = 0; i < potrero1.length; i++) {
                                if(raza.equalsIgnoreCase("R1")){
                                    if(potrero8[j].equals("+")){
                                       potrero8[j]=potrero1[i];
                                       potrero1[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R3")){
                                    if(potrero8[j].equals("+")){
                                       potrero8[j]=potrero1[i];
                                       potrero1[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero1.length;
                                }
                            }                            
                            break;
                            default:
                            JOptionPane.showMessageDialog(null, "El potrero no existe");
                        }
                    }

                    else {
                        JOptionPane.showMessageDialog(null, "La raza no existe en el potrero");
                    }
                    break;
                case 2:
                    if(potrero_s>4 && potrero_s<9){
                        switch(potrero_s){
                            case 5:
                      
                            for (int i = 0; i < potrero2.length; i++) {
                                if(raza.equalsIgnoreCase("R2")){
                                    if(potrero5[j].equals("+")){
                                       potrero5[j]=potrero2[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R4")){
                                    if(potrero5[j].equals("+")){
                                       potrero5[j]=potrero2[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero2.length;
                                }
                            }                            
                            break;
                            
                            case 6:
                                 for (int i = 0; i < potrero2.length; i++) {
                                if(raza.equalsIgnoreCase("R2")){
                                    if(potrero6[j].equals("+")){
                                       potrero6[j]=potrero2[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R4")){
                                    if(potrero6[j].equals("+")){
                                       potrero6[j]=potrero2[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero2.length;
                                }
                            }                            
                            break;
                            
                            case 7:
                                for (int i = 0; i < potrero2.length; i++) {
                                if(raza.equalsIgnoreCase("R2")){
                                    if(potrero7[j].equals("+")){
                                       potrero7[j]=potrero2[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R4")){
                                    if(potrero7[j].equals("+")){
                                       potrero7[j]=potrero2[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero2.length;
                                }
                            }                            
                            break;
                            case 8:
                                for (int i = 0; i < potrero2.length; i++) {
                                if(raza.equalsIgnoreCase("R2")){
                                    if(potrero8[j].equals("+")){
                                       potrero8[j]=potrero2[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R4")){
                                    if(potrero8[j].equals("+")){
                                       potrero8[j]=potrero2[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero2.length;
                                }
                            }                            
                            break;
                            default:
                            JOptionPane.showMessageDialog(null, "El potrero no existe");
                        }
                    }

                    else {
                        JOptionPane.showMessageDialog(null, "La raza no existe en el potrero");
                    }
                    break;
                    
                case 3: 
                    if(potrero_s>4 && potrero_s<9){
                        switch(potrero_s){
                            case 5:
                      
                            for (int i = 0; i < potrero3.length; i++) {
                                if(raza.equalsIgnoreCase("R1")){
                                    if(potrero5[j].equals("+")){
                                       potrero5[j]=potrero3[i];
                                       potrero3[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R5")){
                                    if(potrero5[j].equals("+")){
                                       potrero5[j]=potrero3[i];
                                       potrero2[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero3.length;
                                }
                            }                            
                            break;
                            
                            case 6:
                                 for (int i = 0; i < potrero3.length; i++) {
                                if(raza.equalsIgnoreCase("R1")){
                                    if(potrero6[j].equals("+")){
                                       potrero6[j]=potrero3[i];
                                       potrero3[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R5")){
                                    if(potrero6[j].equals("+")){
                                       potrero6[j]=potrero3[i];
                                       potrero3[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero3.length;
                                }
                            }                            
                            break;
                            
                            case 7:
                                for (int i = 0; i < potrero3.length; i++) {
                                if(raza.equalsIgnoreCase("R1")){
                                    if(potrero7[j].equals("+")){
                                       potrero7[j]=potrero3[i];
                                       potrero3[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R5")){
                                    if(potrero7[j].equals("+")){
                                       potrero7[j]=potrero3[i];
                                       potrero3[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero3.length;
                                }
                            }                            
                            break;
                            case 8:
                                for (int i = 0; i < potrero3.length; i++) {
                                if(raza.equalsIgnoreCase("R1")){
                                    if(potrero8[j].equals("+")){
                                       potrero8[j]=potrero3[i];
                                       potrero3[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R5")){
                                    if(potrero8[j].equals("+")){
                                       potrero8[j]=potrero3[i];
                                       potrero3[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero3.length;
                                }
                            }                            
                            break;
                            default:
                            JOptionPane.showMessageDialog(null, "El potrero no existe");
                        }
                    }

                    else {
                        JOptionPane.showMessageDialog(null, "La raza no existe en el potrero");
                    }
                    break;
                   
                case 4:
                    if(potrero_s>4 && potrero_s<9){
                        switch(potrero_s){
                            case 5:
                      
                            for (int i = 0; i < potrero4.length; i++) {
                                if(raza.equalsIgnoreCase("R4")){
                                    if(potrero5[j].equals("+")){
                                       potrero5[j]=potrero4[i];
                                       potrero4[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R6")){
                                    if(potrero5[j].equals("+")){
                                       potrero5[j]=potrero4[i];
                                       potrero4[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero4.length;
                                }
                            }                            
                            break;
                            
                            case 6:
                                 for (int i = 0; i < potrero4.length; i++) {
                                if(raza.equalsIgnoreCase("R4")){
                                    if(potrero6[j].equals("+")){
                                       potrero6[j]=potrero4[i];
                                       potrero4[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R6")){
                                    if(potrero6[j].equals("+")){
                                       potrero6[j]=potrero4[i];
                                       potrero4[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero4.length;
                                }
                            }                            
                            break;
                            
                            case 7:
                                for (int i = 0; i < potrero4.length; i++) {
                                if(raza.equalsIgnoreCase("R4")){
                                    if(potrero7[j].equals("+")){
                                       potrero7[j]=potrero4[i];
                                       potrero4[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R6")){
                                    if(potrero7[j].equals("+")){
                                       potrero7[j]=potrero4[i];
                                       potrero4[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero4.length;
                                }
                            }                            
                            break;
                            case 8:
                                for (int i = 0; i < potrero4.length; i++) {
                                if(raza.equalsIgnoreCase("R4")){
                                    if(potrero8[j].equals("+")){
                                       potrero8[j]=potrero4[i];
                                       potrero4[i]="+"; 
                                       cont_r++;
                                        j++;
                                    }else j++;
                                }
                                else if(raza.equalsIgnoreCase("R6")){
                                    if(potrero8[j].equals("+")){
                                       potrero8[j]=potrero4[i];
                                       potrero4[i]="+"; 
                                       cont_r++;
                                       j++;
                                    }else j++; 
                                }
                                else JOptionPane.showMessageDialog(null, "Esta raza no se puede meter en este potrero");
                                if(cont_r==nro_reses){
                                    i=potrero4.length;
                                }
                            }                            
                            break;
                            default:
                            JOptionPane.showMessageDialog(null, "El potrero no existe");
                        }
                    }

                    else {
                        JOptionPane.showMessageDialog(null, "La raza no existe en el potrero");
                    }
                    break;
                    
                case 5:
                    
                        
                }
           }
                        

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null,"Ocurrió un error \n" + error);
        }
        
        graficas();
    }//GEN-LAST:event_b_moverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {                 
        
        
        
        /* Set the Nimbus look and feel */
       //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Control_ganado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Control_ganado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Control_ganado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Control_ganado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Control_ganado().setVisible(true);
            }
        });
    }
    
    public static void llenado_potreros(){
        try {
             int codigo;
        int vacunado;
        for (int i = 0; i < 30; i++) {
            codigo=(int)(Math.random()*(500-100)+100);
            
            potrero1[i]="R1-"+String.valueOf(codigo);
            potrero1[i+30]="R3-"+String.valueOf(codigo);
        }
         for (int i = 0; i < 40; i++) {
            codigo=(int)(Math.random()*(500-100)+100);
            potrero2[i]="R2-"+String.valueOf(codigo);
            if(i+40<70){
               potrero2[i+40]="R4-"+String.valueOf(codigo);
              if(i+40==70)i=40; 
            }    
        }
          for (int i = 0; i < 30; i++) {
            codigo=(int)(Math.random()*(500-100)+100);
            potrero3[i]="R1-"+String.valueOf(codigo);
            if(i+30<50){
               potrero3[i+30]="R5-"+String.valueOf(codigo);
              if(i+30==50)i=40; 
            }    
        }
          for (int i = 0; i < 40; i++) {
            codigo=(int)(Math.random()*(500-100)+100);
            potrero4[i]="R4-"+String.valueOf(codigo);
            if(i+40<70){
            potrero4[i+40]="R6-"+String.valueOf(codigo);
            if(i+40==70)i=40; 
            }     
        }
            for (int i = 0; i < 60; i++) {
                potrero5[i]="+";
                potrero6[i]="+";
                potrero7[i]="+";
                potrero8[i]="+";
            }
          for (int i = 0; i < 80; i++) {
                  if(potrero1[i]==null)potrero1[i]="+";
                  if(potrero2[i]==null)potrero2[i]="+";
                  if(potrero3[i]==null)potrero3[i]="+";
                  if(potrero4[i]==null)potrero4[i]="+";     
              }
          for (int i = 0; i < 80; i++) {
              vacunado=(int)(Math.random()*2);
            if(vacunado==1 && !potrero1[i].equals("+")){
                potrero1[i]+="/Si";
            }
            else if(vacunado==0 && !potrero1[i].equals("+")) {
                potrero1[i]+="/No";
            }
            vacunado=(int)(Math.random()*2);
            if(vacunado==1 && !potrero2[i].equals("+")){
                potrero2[i]+="/Si";
            }
            else if(vacunado==0 && !potrero2[i].equals("+")) {
                potrero2[i]+="/No";
            }
            vacunado=(int)(Math.random()*2);
            if(vacunado==1 && !potrero3[i].equals("+")){
                potrero3[i]+="/Si";
            }
            else if(vacunado==0 && !potrero3[i].equals("+")) {
                potrero3[i]+="/No";
            }
            vacunado=(int)(Math.random()*2);
            if(vacunado==1 && !potrero4[i].equals("+")){
                potrero4[i]+="/Si";
            }
            else if(vacunado==0 && !potrero4[i].equals("+")) {
                potrero4[i]+="/No";
            }
        }            
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error \n" + error);
        } 
    }
    
    public void graficas(){
         try {
            String raza[];
            int r1=0, r3=0, r2=0, r4=0, r5=0, r6=0;
            //Gráfico potrero1
            for (int i = 0; i < potrero1.length; i++) {
                raza=potrero1[i].split("-");
                if(raza[0].equals("R1"))r1++;
                else if(raza[0].equals("R3"))r3++;
            }

            DefaultPieDataset datos1 = new DefaultPieDataset();
            datos1.setValue("Raza 1 = "+r1, r1);
            datos1.setValue("Raza 3 = "+r3, r3);

            JFreeChart grafico_potrero1 = ChartFactory.createPieChart(
                "Potrero 1",         //nombre del grafico
                datos1,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel1 = new ChartPanel(grafico_potrero1);
            panel1.setMouseWheelEnabled(true);
            panel1.setPreferredSize(new Dimension(200,200));

            jPanel1.setLayout(new BorderLayout());
            jPanel1.add(panel1,BorderLayout.NORTH);

            pack();
            repaint();

            //Gráfico portrero 2
            for (int i = 0; i < potrero2.length; i++) {
                raza=potrero2[i].split("-");
                if(raza[0].equals("R2"))r2++;
                else if(raza[0].equals("R4"))r4++;
            }

            DefaultPieDataset datos2 = new DefaultPieDataset();
            datos2.setValue("Raza 2 = "+r2, r2);
            datos2.setValue("Raza 4 = "+r4, r4);

            JFreeChart grafico_potrero2 = ChartFactory.createPieChart(
                "Potrero 2",         //nombre del grafico
                datos2,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel2 = new ChartPanel(grafico_potrero2);
            panel2.setMouseWheelEnabled(true);
            panel2.setPreferredSize(new Dimension(200,200));

            jPanel2.setLayout(new BorderLayout());
            jPanel2.add(panel2,BorderLayout.NORTH);

            pack();
            repaint();

            r1=0;
            for (int i = 0; i < potrero3.length; i++) {
                raza=potrero3[i].split("-");
                if(raza[0].equals("R1"))r1++;
                else if(raza[0].equals("R5"))r5++;
            }

            DefaultPieDataset datos3 = new DefaultPieDataset();
            datos3.setValue("Raza 1 = "+r1, r1);
            datos3.setValue("Raza 5 = "+r5, r5);

            JFreeChart grafico_potrero3 = ChartFactory.createPieChart(
                "Potrero 3",         //nombre del grafico
                datos3,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel3 = new ChartPanel(grafico_potrero3);
            panel3.setMouseWheelEnabled(true);
            panel3.setPreferredSize(new Dimension(200,200));

            jPanel3.setLayout(new BorderLayout());
            jPanel3.add(panel3,BorderLayout.NORTH);

            pack();
            repaint();

            r4=0;
            for (int i = 0; i < potrero4.length; i++) {
                raza=potrero4[i].split("-");
                if(raza[0].equals("R4"))r4++;
                else if(raza[0].equals("R6"))r6++;
            }

            DefaultPieDataset datos4 = new DefaultPieDataset();
            datos4.setValue("Raza 4 = "+r4, r4);
            datos4.setValue("Raza 6 = "+r6, r6);

            JFreeChart grafico_potrero4 = ChartFactory.createPieChart(
                "Potrero 4",         //nombre del grafico
                datos4,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel4 = new ChartPanel(grafico_potrero4);
            panel4.setMouseWheelEnabled(true);
            panel4.setPreferredSize(new Dimension(200,200));

            jPanel4.setLayout(new BorderLayout());
            jPanel4.add(panel4,BorderLayout.NORTH);

            pack();
            repaint();

        } catch (Exception error) {
            System.out.println("Ocurrió un error \n" + error);
        }
    }
    
    public void graficas_vacunar(){
        try {
            String vacuna[];
            int cont_si=0, cont_no=0;
            //Gráfico potrero1
            for (int i = 0; i < potrero1.length; i++) {
                if(!potrero1[i].equals("+")){
                vacuna=potrero1[i].split("/");
                if(vacuna[1].equals("Si"))cont_si++;
                else if(vacuna[1].equals("No"))cont_no++;
                }
                
                
            }

            DefaultPieDataset datos1 = new DefaultPieDataset();
            datos1.setValue("Vacunados = "+cont_si, cont_si);
            datos1.setValue("Sin vacunar = "+cont_no, cont_no);

            JFreeChart grafico_potrero1 = ChartFactory.createPieChart(
                "Potrero 1",         //nombre del grafico
                datos1,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel1 = new ChartPanel(grafico_potrero1);
            panel1.setMouseWheelEnabled(true);
            panel1.setPreferredSize(new Dimension(200,200));

            jPanel5.setLayout(new BorderLayout());
            jPanel5.add(panel1,BorderLayout.NORTH);

            pack();
            repaint();
            
            cont_si=0;cont_no=0;
            for (int i = 0; i < potrero2.length; i++) {
                if(!potrero2[i].equals("+")){
                    vacuna=potrero2[i].split("/");
                    if(vacuna[1].equals("Si"))cont_si++;
                    else if(vacuna[1].equals("No"))cont_no++;
                }
               
                
            }

            DefaultPieDataset datos2 = new DefaultPieDataset();
            datos2.setValue("Vacunados = "+cont_si, cont_si);
            datos2.setValue("Sin vacunar = "+cont_no, cont_no);

            JFreeChart grafico_potrero2 = ChartFactory.createPieChart(
                "Potrero 2",         //nombre del grafico
                datos2,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel2 = new ChartPanel(grafico_potrero2);
            panel2.setMouseWheelEnabled(true);
            panel2.setPreferredSize(new Dimension(200,200));

            jPanel6.setLayout(new BorderLayout());
            jPanel6.add(panel2,BorderLayout.NORTH);

            pack();
            repaint();
            
            cont_si=0;cont_no=0;
            for (int i = 0; i < potrero3.length; i++) {
                if(!potrero3[i].equals("+")){
                    vacuna=potrero3[i].split("/");
                    if(vacuna[1].equals("Si"))cont_si++;
                    else if(vacuna[1].equals("No"))cont_no++;
                }
               
                
            }

            DefaultPieDataset datos3 = new DefaultPieDataset();
            datos3.setValue("Vacunados = "+cont_si, cont_si);
            datos3.setValue("Sin vacunar = "+cont_no, cont_no);

            JFreeChart grafico_potrero3 = ChartFactory.createPieChart(
                "Potrero 3",         //nombre del grafico
                datos3,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel3 = new ChartPanel(grafico_potrero3);
            panel3.setMouseWheelEnabled(true);
            panel3.setPreferredSize(new Dimension(200,200));

            jPanel7.setLayout(new BorderLayout());
            jPanel7.add(panel3,BorderLayout.NORTH);

            pack();
            repaint();
            
            cont_si=0;cont_no=0;
            for (int i = 0; i < potrero4.length; i++) {
                if(!potrero4[i].equals("+")){
                    vacuna=potrero4[i].split("/");
                    if(vacuna[1].equals("Si"))cont_si++;
                    else if(vacuna[1].equals("No"))cont_no++;
                 
                }

            }

            DefaultPieDataset datos4 = new DefaultPieDataset();
            datos4.setValue("Vacunados = "+cont_si, cont_si);
            datos4.setValue("Sin vacunar = "+cont_no, cont_no);

            JFreeChart grafico_potrero4 = ChartFactory.createPieChart(
                "Potrero 4",         //nombre del grafico
                datos4,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel4 = new ChartPanel(grafico_potrero4);
            panel4.setMouseWheelEnabled(true);
            panel4.setPreferredSize(new Dimension(200,200));

            jPanel8.setLayout(new BorderLayout());
            jPanel8.add(panel4,BorderLayout.NORTH);

            pack();
            repaint();
            
            cont_si=0;cont_no=0;
            for (int i = 0; i < potrero5.length; i++) {
                if(!potrero5[i].equals("+")){
                    vacuna=potrero5[i].split("/");
                    if(vacuna[1].equals("Si"))cont_si++;
                    else if(vacuna[1].equals("No"))cont_no++;
                }
                
                
            }

            DefaultPieDataset datos5 = new DefaultPieDataset();
            datos5.setValue("Vacunados = "+cont_si, cont_si);
            datos5.setValue("Sin vacunar = "+cont_no, cont_no);

            JFreeChart grafico_potrero5 = ChartFactory.createPieChart(
                "Potrero 5",         //nombre del grafico
                datos5,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel5 = new ChartPanel(grafico_potrero5);
            panel5.setMouseWheelEnabled(true);
            panel5.setPreferredSize(new Dimension(200,200));

            jPanel6.setLayout(new BorderLayout());
            jPanel6.add(panel5,BorderLayout.NORTH);

            pack();
            repaint();
            
            cont_si=0;cont_no=0;
            for (int i = 0; i < potrero6.length; i++) {
                if(!potrero6[i].equals("+")){
                    vacuna=potrero6[i].split("/");
                    if(vacuna[1].equals("Si"))cont_si++;
                    else if(vacuna[1].equals("No"))cont_no++;
                }
                
                
            }

            DefaultPieDataset datos6 = new DefaultPieDataset();
            datos6.setValue("Vacunados = "+cont_si, cont_si);
            datos6.setValue("Sin vacunar = "+cont_no, cont_no);

            JFreeChart grafico_potrero6 = ChartFactory.createPieChart(
                "Potrero 6",         //nombre del grafico
                datos6,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel6 = new ChartPanel(grafico_potrero6);
            panel6.setMouseWheelEnabled(true);
            panel6.setPreferredSize(new Dimension(200,200));

            jPanel6.setLayout(new BorderLayout());
            jPanel6.add(panel6,BorderLayout.NORTH);

            pack();
            repaint();
            
            cont_si=0;cont_no=0;
            for (int i = 0; i < potrero7.length; i++) {
                if(!potrero7[i].equals("+")){
                    vacuna=potrero7[i].split("/");
                    if(vacuna[1].equals("Si"))cont_si++;
                    else if(vacuna[1].equals("No"))cont_no++;
                }
                
                
            }

            DefaultPieDataset datos7 = new DefaultPieDataset();
            datos7.setValue("Vacunados = "+cont_si, cont_si);
            datos7.setValue("Sin vacunar = "+cont_no, cont_no);

            JFreeChart grafico_potrero7 = ChartFactory.createPieChart(
                "Potrero 7",         //nombre del grafico
                datos7,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel7 = new ChartPanel(grafico_potrero7);
            panel7.setMouseWheelEnabled(true);
            panel7.setPreferredSize(new Dimension(200,200));

            jPanel6.setLayout(new BorderLayout());
            jPanel6.add(panel7,BorderLayout.NORTH);

            pack();
            repaint();
            
            cont_si=0;cont_no=0;
            for (int i = 0; i < potrero8.length; i++) {
                if(!potrero8[i].equals("+")){
                    vacuna=potrero8[i].split("/");
                    if(vacuna[1].equals("Si"))cont_si++;
                    else if(vacuna[1].equals("No"))cont_no++;
                }
                
                
            }

            DefaultPieDataset datos8 = new DefaultPieDataset();
            datos8.setValue("Vacunados = "+cont_si, cont_si);
            datos8.setValue("Sin vacunar = "+cont_no, cont_no);

            JFreeChart grafico_potrero8 = ChartFactory.createPieChart(
                "Potrero 8",         //nombre del grafico
                datos8,        //datos
                true,        //nombre de categorias
                true,        //herramientas
                false        //generaciónn de URL
            );

            ChartPanel panel8 = new ChartPanel(grafico_potrero8);
            panel8.setMouseWheelEnabled(true);
            panel8.setPreferredSize(new Dimension(200,200));

            jPanel6.setLayout(new BorderLayout());
            jPanel6.add(panel8,BorderLayout.NORTH);

            pack();
            repaint();






            
            
            
                      

        } catch (Exception error) {
            System.out.println("Ocurrió un error \n" + error);
        }
    
    }
 
          
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_agregar;
    private javax.swing.JButton b_mover;
    private javax.swing.JButton b_vacunar;
    private javax.swing.JButton b_vender;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    // End of variables declaration//GEN-END:variables
}
